.decl _ActualParam(?index:number, ?invocation:symbol, ?var:symbol)
.decl ActualParam(?index:number, ?invocation:symbol, ?var:symbol)
.decl AnnotationElement(?annotationKind:symbol, ?element:symbol, ?parentId:symbol, ?id:symbol, ?name:symbol, ?value1:symbol, ?value2:symbol)
.decl ApplicationAllocation(?allocation:symbol)
.decl ApplicationClass(?ref:symbol)
.decl _ApplicationClass(?type:symbol)
.decl ApplicationField(?field:symbol)
.decl ApplicationInvocation(?invocation:symbol)
.decl ApplicationMethod(?symbol:symbol)
.decl _ApplicationPackage(?package:symbol)
.decl ApplicationVar(?var:symbol)
.decl ArrayAllocation(?insn:symbol, ?pos:number, ?sizeVar:symbol)
.decl _ArrayAllocation(?instruction:symbol, ?pos:number, ?sizeVar:symbol)
.decl ArrayInsnIndex(?insn:symbol, ?index:symbol)
.decl _ArrayInsnIndex(?instruction:symbol, ?index:symbol)
.decl ArrayNumIndex(?insn:symbol, ?index:number)
.decl _ArrayNumIndex(?instruction:symbol, ?index:number)
.decl _ArrayType(?arrayType:symbol)
.decl AssignBinop(?instruction:symbol, ?index:number, ?to:symbol, ?inmethod:symbol)
.decl AssignCast_From(?insn:symbol, ?from:symbol)
.decl AssignCast(?instruction:symbol, ?index:number, ?from:symbol, ?to:symbol, ?type:symbol, ?inmethod:symbol)
.decl AssignCastNull(?instruction:symbol, ?index:number, ?to:symbol, ?type:symbol, ?symbol:symbol)
.decl AssignCastNumConstant_Id(?insn:symbol, ?const:symbol)
.decl AssignCastNumConstant(?instruction:symbol, ?index:number, ?const:symbol, ?to:symbol, ?type:symbol, ?inmethod:symbol)
.decl AssignCast_Type(?insn:symbol, ?type:symbol)
//.decl AssignCast(?type:symbol, ?from:symbol, ?to:symbol, ?inmethod:symbol)
.decl AssignHeapAllocation_Heap(?insn:symbol, ?heap:symbol)
//.decl AssignHeapAllocation(?heap:symbol, ?to:symbol, ?inmethod:symbol)
.decl AssignHeapAllocation(?instruction:symbol, ?index:number, ?heap:symbol, ?to:symbol, ?inmethod:symbol, ?linenumber:number)
.decl AssignInstanceOf_From(?insn:symbol, ?from:symbol)
.decl AssignInstanceOf(?instruction:symbol, ?index:number, ?from:symbol, ?to:symbol, ?type:symbol, ?inmethod:symbol)
.decl AssignInstanceOf_Type(?insn:symbol, ?type:symbol)
.decl AssignInstruction_To(?insn:symbol, ?to:symbol)
.decl AssignLocal_From(?insn:symbol, ?from:symbol)
.decl AssignLocal(?instruction:symbol, ?index:number, ?from:symbol, ?to:symbol, ?inmethod:symbol)
.decl _AssignNull(?instruction:symbol, ?index:number, ?to:symbol, ?symbol:symbol)
.decl AssignNull(?to:symbol, ?inmethod:symbol)
.decl AssignNumConstant_Id(?insn:symbol, ?const:symbol)
.decl AssignNumConstant(?instruction:symbol, ?index:number, ?const:symbol, ?to:symbol, ?inmethod:symbol)
.decl AssignOper_FromConstant(?insn:symbol, ?pos: number, ?fro:number)
.decl _AssignOperFromConstant(?instruction:symbol, ?pos: number, ?fro:number)
.decl AssignOper_From(?insn:symbol, ?pos:number, ?from:symbol)
.decl _AssignOperFrom(?instruction:symbol, ?pos: number, ?from:symbol)
.decl _AssignPhantomInvoke(?instruction:symbol, ?index:number, ?symbol:symbol)
.decl _AssignReturnValue(?invocation:symbol, ?to:symbol)
.decl AssignReturnValue(?invocation:symbol, ?to:symbol)
.decl AssignUnop(?instruction:symbol, ?index:number, ?to:symbol, ?inmethod:symbol)
.decl _BootstrapParam(?index:number, ?invocation:symbol, ?var:symbol)
.decl BootstrapParam(?index:number, ?invocation:symbol, ?var:symbol)
.decl _BreakpointStmt(?instruction:symbol, ?index:number, ?symbol:symbol)
.decl _ClassArtifact(?artifact:symbol, ?className:symbol, ?subArtifact:symbol, ?size:number)
.decl _ClassHeap(?id:symbol, ?instanceType:symbol)
.decl ClassHeap_InstanceType(?classHeap:symbol, ?instanceType:symbol)
.decl _ClassModifier(?modifier:symbol, ?class:symbol)
.decl ClassModifier(?mod:symbol, ?class:symbol)
.decl _ClassType(?class:symbol)
.decl _ComponentType(?arrayType:symbol, ?componentType:symbol)
.decl ComponentType(?arrayType:symbol, ?componentType:symbol)
.decl ConcreteClass(?ref:symbol)
.decl _DirectSuperclass(?class:symbol, ?superclass:symbol)
.decl DirectSuperclass(?class:symbol, ?superclass:symbol)
.decl _DirectSuperinterface(?class:symbol, ?interface:symbol)
.decl DirectSuperinterface(?ref:symbol, ?interface:symbol)
.decl DummyIf_Var(?insn:symbol, ?Var:symbol)
.decl _DummyIfVar(?instruction:symbol, ?var:symbol)
.decl DynamicMethodInvocation_Bootstrap(?invocation:symbol, ?bootSignature:symbol)
.decl DynamicMethodInvocation_DynArity(?invocation:symbol, ?dynArity:number)
.decl DynamicMethodInvocation_DynName(?invocation:symbol, ?dynName:symbol)
.decl _DynamicMethodInvocation_DynParamType(?invocation:symbol, ?idx:number, ?pType:symbol)
.decl DynamicMethodInvocation_DynParamTypes(?invocation:symbol, ?dynParamTypes:symbol)
.decl DynamicMethodInvocation_DynReturnType(?invocation:symbol, ?dynRetType:symbol)
.decl DynamicMethodInvocation_HandleTag(?instruction:symbol, ?tag:number)
.decl _DynamicMethodInvocation(?instruction:symbol, ?index:number, ?bootSignature:symbol, ?dynName:symbol, ?dynRetType:symbol, ?dynArity:number, ?dynParamTypes:symbol, ?tag:number, ?symbol:symbol)
.decl _EmptyArray(?id:symbol)
.decl _EnterMonitor(?instruction:symbol, ?index:number, ?var:symbol, ?symbol:symbol)
.decl EnterMonitor_Var(?insn:symbol, ?var:symbol)
.decl ExceptionHandler_Begin(?handler:symbol, ?index:number)
.decl ExceptionHandler_End(?handler:symbol, ?index:number)
.decl ExceptionHandler_FormalParam(?handler:symbol, ?var:symbol)
.decl _ExceptionHandler(?handler:symbol, ?symbol:symbol, ?index:number, ?type:symbol, ?begin:number, ?end:number)
.decl ExceptionHandler_Index(?handler:symbol, ?index:number)
.decl ExceptionHandler_Method(?handler:symbol, ?inmethod:symbol)
.decl _ExceptionHandler_Previous(?handler:symbol, ?previous:symbol)
.decl ExceptionHandler_Previous(?handler:symbol, ?previous:symbol)
.decl ExceptionHandler_Type(?handler:symbol, ?type:symbol)
.decl _ExitMonitor(?instruction:symbol, ?index:number, ?var:symbol, ?symbol:symbol)
.decl ExitMonitor_Var(?insn:symbol, ?var:symbol)
.decl Field_Annotation(?fld:symbol, ?annotation:symbol)
.decl Field_DeclaringType(?field:symbol, ?declaringClass:symbol)
.decl FieldInstruction_Signature(?insn:symbol, ?sign:symbol)
.decl _Field_Modifier(?modifier:symbol, ?field:symbol)
.decl Field_Modifier(?mod:symbol, ?field:symbol)
.decl _Field(?signature:symbol, ?declaringClass:symbol, ?simplename:symbol, ?type:symbol)
.decl Field_SimpleName(?field:symbol, ?simpleName:symbol)
.decl Field_Type(?field:symbol, ?type:symbol)
.decl _FormalParam(?index:number, ?symbol:symbol, ?var:symbol)
.decl FormalParam(?index:number, ?symbol:symbol, ?var:symbol)
.decl _Goto(?instruction:symbol, ?index:number, ?to:number, ?symbol:symbol)
.decl Goto_Target(?insn:symbol, ?index:number)
.decl HeapAllocation_EmptyArray(?heap:symbol)
.decl HeapAllocation_Null(?null:symbol)
.decl HeapAllocation_Type(?heap:symbol, ?type:symbol)
.decl If_Constant(?insn:symbol, ?pos: number, ?cons:number)
.decl _IfConstant(?instruction:symbol, ?pos:number, ?con:number)
.decl _If(?instruction:symbol, ?index:number, ?to:number, ?symbol:symbol)
.decl If_Target(?insn:symbol, ?index:number)
.decl If_Var(?insn:symbol, ?pos:number, ?var:symbol)
.decl _IfVar(?instruction:symbol, ?pos:number, ?var:symbol)
.decl Instruction_Index(?insn:symbol, ?index:number)
.decl Instruction_Line(?insn:symbol, ?index:number)
.decl Instruction_Method(?insn:symbol, ?inMethod:symbol)
.decl _InterfaceType(?interface:symbol)
.decl isAnnotation(?a:symbol)
.decl isArrayInstruction(?insn:symbol)
.decl isArrayType(?t:symbol)
.decl isAssignBinop_Insn(?insn:symbol)
.decl isAssignCast_Insn(?insn:symbol)
.decl isAssignCastNull_Insn(?insn:symbol)
.decl isAssignCastNumConstant_Insn(?insn:symbol)
.decl isAssignHeapAllocation_Insn(?insn:symbol)
.decl isAssignInstanceOf_Insn(?insn:symbol)
.decl isAssignInstruction(?insn:symbol)
.decl isAssignLocal_Insn(?insn:symbol)
.decl isAssignNull_Insn(?insn:symbol)
.decl isAssignNumConstant_Insn(?insn:symbol)
.decl isAssignOper_Insn(?insn:symbol)
.decl isAssignPhantomInvoke(?insn:symbol)
.decl isAssignUnop_Insn(?insn:symbol)
.decl isBreakpointStmt(?insn:symbol)
.decl isClassHeap(?h:symbol)
.decl isClassType(?t:symbol)
.decl isDynamicMethodInvocation_Insn(?insn:symbol)
.decl isEnterMonitor_Insn(?insn:symbol)
.decl isExceptionHandler(?handler:symbol)
.decl isExitMonitor_Insn(?insn:symbol)
.decl isField(?field:symbol)
.decl isFieldInstruction(?insn:symbol)
.decl isGoto_Insn(?insn:symbol)
.decl isHeapAllocation(?h:symbol)
.decl isIf_Insn(?insn:symbol)
.decl isInstruction(?insn:symbol)
.decl isInterfaceType(?t:symbol)
.decl isJVMDescriptor(?jvmd:symbol)
.decl isLoadArrayIndex_Insn(?insn:symbol)
.decl isLoadInstanceField_Insn(?insn:symbol)
.decl isLoadStaticField_Insn(?insn:symbol)
.decl isLookupSwitch_Insn(?insn:symbol)
.decl isMethodDescriptor(?md:symbol)
.decl isMethodHandleConstant(?h:symbol)
.decl isMethodInvocation(?insn:symbol)
.decl isMethod(?m:symbol)
.decl isMethodTypeConstant(?h:symbol)
.decl isModifier(?m:symbol)
.decl isMonitorInstruction(?insn:symbol)
.decl isNormalHeap(?h:symbol)
.decl isNullType(?t:symbol)
.decl isNumConstant(?n:symbol)
.decl isOpaqueInstruction(?insn:symbol)
.decl isOpaqueMethod(?m:symbol)
.decl isPrimitiveType(?t:symbol)
.decl isReferenceType(?t:symbol)
.decl isReturnInstruction(?insn:symbol)
.decl isReturnNonvoid_Insn(?insn:symbol)
.decl isReturnVoid_Insn(?insn:symbol)
.decl isSpecialMethodInvocation_Insn(?insn:symbol)
.decl isStaticMethodInvocation_Insn(?insn:symbol)
.decl isStoreArrayIndex_Insn(?insn:symbol)
.decl isStoreInstanceField_Insn(?insn:symbol)
.decl isStoreStaticField_Insn(?insn:symbol)
.decl isStringConstant(?h:symbol)
.decl isStringRaw(?id:symbol)
.decl isSuperMethodInvocation_Insn(?insn:symbol)
.decl isSwitch_Insn(?insn:symbol)
.decl isTableSwitch_Insn(?insn:symbol)
.decl isThrow_Insn(?insn:symbol)
.decl isThrowNull_Insn(?insn:symbol)
.decl isType(?t:symbol)
.decl isUnsupportedInstruction(?insn:symbol)
.decl isVar(v:symbol)
.decl isVirtualMethodInvocation_Insn(?insn:symbol)
.decl KeepClass(?c:symbol)
.decl KeepClassesWithMembers(?m:symbol)
.decl KeepClassMembers(?m:symbol)
.decl KeepMethod(?m:symbol)
.decl LoadArrayIndex_Base(?insn:symbol, ?var:symbol)
.decl LoadArrayIndex(?base:symbol, ?to:symbol, ?inmethod:symbol)
.decl _LoadArrayIndex(?instruction:symbol, ?index:number, ?to:symbol, ?base:symbol, ?symbol:symbol)
.decl LoadArrayIndex_To(?insn:symbol, var:symbol)
.decl LoadInstanceField_Base(?insn:symbol, ?var:symbol)
.decl LoadInstanceField(?base:symbol, ?sig:symbol, ?to:symbol, ?inmethod:symbol)
.decl _LoadInstanceField(?instruction:symbol, ?index:number, ?to:symbol, ?base:symbol, ?signature:symbol, ?symbol:symbol)
.decl LoadInstanceField_To(?insn:symbol, ?var:symbol)
.decl _LoadStaticField(?instruction:symbol, ?index:number, ?to:symbol, ?signature:symbol, ?symbol:symbol)
.decl LoadStaticField(?sig:symbol, ?to:symbol, ?inmethod:symbol)
.decl LoadStaticField_To(?insn:symbol, ?var:symbol)
.decl _LookupSwitch_DefaultTarget(?instruction:symbol, ?target:number)
.decl _LookupSwitch(?instruction:symbol, ?index:number, ?key:symbol, ?symbol:symbol)
.decl _LookupSwitch_Target(?instruction:symbol, ?value:number, ?target:number)
.decl MainClass(?class:symbol)
.decl MainMethodArgArrayContent(?heap:symbol)
.decl MainMethodArgArray(?heap:symbol)
.decl Method_Annotation(?symbol:symbol, ?annotation:symbol)
.decl Method_Arity(?symbol:symbol, ?arity:number)
.decl _Method_DeclaresException(?exceptionType:symbol, ?symbol:symbol)
.decl Method_DeclaresException(?exceptionType:symbol, ?symbol:symbol)
.decl Method_DeclaringType(?symbol:symbol, ?declaringType:symbol)
.decl Method_Descriptor(?symbol:symbol, ?descriptor:symbol)
.decl MethodHandleConstant_Arity(?heap:symbol, ?arity:number)
.decl _MethodHandleConstant(?id:symbol, ?symbol:symbol, ?retType:symbol, ?paramTypes:symbol, ?arity:number)
.decl MethodHandleConstant_Method(?heap:symbol, ?symbol:symbol)
.decl MethodHandleConstant_ParamTypes(?heap:symbol, ?paramTypes:symbol)
.decl MethodHandleConstant_ReturnType(?heap:symbol, ?retType:symbol)
.decl MethodInvocation_Base(?invocation:symbol, ?base:symbol)
.decl _MethodInvocation_Line(?instruction:symbol, line:number)
.decl MethodInvocation_Line(?invocation:symbol, ?line:number)
.decl MethodInvocation_Method(?invocation:symbol, ?signature:symbol)
.decl MethodInvocation_SimpleName(?invocation:symbol, ?simpleName:symbol)
.decl Method_JVMDescriptor(?symbol:symbol, ?descriptor:symbol)
.decl _Method_Modifier(?mod:symbol, ?symbol:symbol)
.decl Method_Modifier(?mod:symbol, ?symbol:symbol)
.decl Method_ParamTypes(?symbol:symbol, ?params:symbol)
.decl Method_ReturnType(?symbol:symbol, ?returnType:symbol)
.decl Method_SimpleName(?symbol:symbol, ?simpleName:symbol)
.decl _Method(?symbol:symbol, ?simplename:symbol, ?descriptor:symbol, ?declaringType:symbol, ?returnType:symbol, ?jvmDescriptor:symbol, ?arity:number)
.decl MethodTypeConstant_Arity(?heap:symbol, ?arity:number)
.decl _MethodTypeConstant(?id:symbol, ?arity:number, ?retType:symbol, ?paramTypes:symbol)
.decl _MethodTypeConstantParam(?id:symbol, ?idx:number, ?type:symbol)
.decl MethodTypeConstant_ParamTypes(?heap:symbol, ?paramTypes:symbol)
.decl MethodTypeConstant_ReturnType(?heap:symbol, ?retType:symbol)
.decl Modifier_abstract(?mod:symbol)
.decl Modifier_final(?mod:symbol)
.decl Modifier_private(?mod:symbol)
.decl Modifier_public(?mod:symbol)
.decl Modifier_static(?mod:symbol)
.decl _NativeLibEntryPoint(?lib:symbol, ?function:symbol, ?addr:symbol)
.decl _NativeMethodId(?javaMethod:symbol, ?nativeId:symbol)
.decl _NativeMethodTypeCandidate(?lib:symbol, ?function:symbol, ?descriptor:symbol, ?offset2:number)
.decl _NativeNameCandidate(?lib:symbol, ?function:symbol, ?name:symbol, ?offset1:number)
.decl _NativeReturnVar(?var:symbol, ?symbol:symbol)
.decl NativeReturnVar(?var:symbol, ?symbol:symbol)
.decl _NativeXRef(?string:symbol, ?lib:symbol, ?function:symbol, ?dataAddr:number)
.decl _NormalHeap(?id:symbol, ?type:symbol)
.decl NumConstantRaw(?const:symbol, ?type:symbol)
.decl _OperatorAt(?instruction:symbol, ?operator:symbol)
.decl OriginalHeapAllocation_Type(?heap:symbol, ?type:symbol)
.decl Param_Annotation(?symbol:symbol, ?index:number, ?annotation:symbol)
.decl PhantomBasedMethod(?m:symbol)
.decl PhantomMethod(?m:symbol)
.decl PhantomType(?t:symbol)
.decl _PolymorphicInvocation(?invocation:symbol, ?simpleName:symbol)
.decl Properties(?path:symbol, ?key:symbol, ?value:symbol)
.decl _Return(?instruction:symbol, ?index:number, ?var:symbol, ?symbol:symbol)
.decl ReturnNonvoid_Var(?return:symbol, ?var:symbol)
.decl ReturnVar(?var:symbol, ?symbol:symbol)
.decl _ReturnVoid(?instruction:symbol, ?index:number, ?symbol:symbol)
.decl RootCodeElement(?id:symbol)
.decl SpecialMethodInvocation_Base(?invocation:symbol, ?base:symbol)
.decl SpecialMethodInvocation_Descriptor(?invocation:symbol, ?descriptor:symbol)
.decl _SpecialMethodInvocation(?instruction:symbol, ?index:number, ?signature:symbol, ?base:symbol, ?symbol:symbol)
.decl SpecialMethodInvocation_SimpleName(?invocation:symbol, ?simplename:symbol)
.decl StaticMethodInvocation_Descriptor(?invocation:symbol, ?descriptor:symbol)
.decl _StaticMethodInvocation(?instruction:symbol, ?index:number, ?signature:symbol, ?symbol:symbol)
.decl StaticMethodInvocation(?invocation:symbol, ?signature:symbol, ?inmethod:symbol)
.decl StaticMethodInvocation_SimpleName(?invocation:symbol, ?simplename:symbol)
.decl StoreArrayIndex_Base(?insn:symbol, ?var:symbol)
.decl StoreArrayIndex_From(?insn:symbol, ?var:symbol)
.decl StoreArrayIndex(?from:symbol, ?base:symbol, ?inmethod:symbol)
.decl _StoreArrayIndex(?instruction:symbol, ?index:number, ?from:symbol, ?base:symbol, ?symbol:symbol)
.decl StoreInstanceField_Base(?insn:symbol, ?var:symbol)
.decl StoreInstanceField_From(?insn:symbol, ?var:symbol)
.decl StoreInstanceField(?from:symbol, ?base:symbol, ?signature:symbol, ?inmethod:symbol)
.decl _StoreInstanceField(?instruction:symbol, ?index:number, ?from:symbol, ?base:symbol, ?signature:symbol, ?symbol:symbol)
.decl StoreStaticField_From(?insn:symbol, ?var:symbol)
.decl StoreStaticField(?from:symbol, ?signature:symbol, ?inmethod:symbol)
.decl _StoreStaticField(?instruction:symbol, ?index:number, ?from:symbol, ?signature:symbol, ?symbol:symbol)
.decl _StringConstant(?id:symbol)
.decl _StringRaw(?id:symbol, ?rawId:symbol)
.decl String_toRaw(?id:symbol, ?rawId:symbol)
.decl SuperMethodInvocation_Base(?invocation:symbol, ?base:symbol)
.decl SuperMethodInvocation_Descriptor(?invocation:symbol, ?descriptor:symbol)
.decl _SuperMethodInvocation(?instruction:symbol, ?index:number, ?signature:symbol, ?base:symbol, ?symbol:symbol)
.decl SuperMethodInvocation(?invocation:symbol, ?signature:symbol, ?inmethod:symbol)
.decl SuperMethodInvocation_SimpleName(?invocation:symbol, ?simplename:symbol)
.decl Switch_DefaultTarget(?insn:symbol, ?index:number)
.decl Switch_Key(?insn:symbol, ?key:symbol)
.decl Switch_Target(?insn:symbol, ?value:number, ?index:number)
.decl _TableSwitch_DefaultTarget(?instruction:symbol, ?target:number)
.decl _TableSwitch(?instruction:symbol, ?index:number, ?key:symbol, ?symbol:symbol)
.decl _TableSwitch_Target(?instruction:symbol, ?value:number, ?target:number)
.decl _ThisVar(?symbol:symbol, ?var:symbol)
.decl ThisVar(?symbol:symbol, ?var:symbol)
.decl Throw(?insn:symbol, ?var:symbol)
.decl _Throw(?instruction:symbol, ?index:number, ?var:symbol, ?symbol:symbol)
.decl _ThrowNull(?instruction:symbol, ?index:number, ?symbol:symbol)
.decl Throw_Var(?insn:symbol, ?var:symbol)
.decl Type_Annotation(?type:symbol, ?annotation:symbol)
.decl Type_boolean(?t:symbol)
.decl Type_byte(?t:symbol)
.decl Type_char(?t:symbol)
.decl Type_double(?t:symbol)
.decl Type_float(?t:symbol)
.decl Type_int(?t:symbol)
.decl Type_long(?t:symbol)
.decl Type_null(?t:symbol)
.decl Type_object(?t:symbol)
.decl Type_short(?t:symbol)
.decl Type_void(?t:symbol)
.decl _UnsupportedInstruction(?instruction:symbol, ?index:number, ?symbol:symbol)
.decl _Var_DeclaringMethod(?var:symbol, ?symbol:symbol)
.decl Var_DeclaringMethod(?var:symbol, ?symbol:symbol)
.decl _Var_SimpleName(?var:symbol, ?simplename:symbol)
.decl Var_SimpleName(?var:symbol, ?simplename:symbol)
.decl _Var_Type(?var:symbol, ?type:symbol)
.decl Var_Type(?var:symbol, ?type:symbol)
.decl VirtualMethodInvocation_Base(?invocation:symbol, ?base:symbol)
.decl VirtualMethodInvocation_Descriptor(?invocation:symbol, ?descriptor:symbol)
.decl _VirtualMethodInvocation(?instruction:symbol, ?index:number, ?signature:symbol, ?base:symbol, ?symbol:symbol)
.decl VirtualMethodInvocation(?invocation:symbol, ?signature:symbol, ?inmethod:symbol)
.decl VirtualMethodInvocation_SimpleName(?invocation:symbol, ?simplename:symbol)
.decl XMLNodeAttribute(?file:symbol, ?nodeId:symbol, ?index:symbol, ?localName:symbol, ?qName:symbol, ?value:symbol)
.decl XMLNodeData(?file:symbol, ?nodeId:symbol, ?data:symbol)
.decl XMLNode(?file:symbol, ?nodeId:symbol, ?parentNodeId:symbol, ?namespaceURI:symbol, ?localName:symbol, ?qName:symbol)

.input KeepMethod(filename="KeepMethod.facts")
.input KeepClassMembers(filename="KeepClassMembers.facts")
.input KeepClassesWithMembers(filename="KeepClassesWithMembers.facts")
.input KeepClass(filename="KeepClass.facts")
.input RootCodeElement(filename="RootCodeElement.facts")
.input _ClassType(filename="Method.facts")
.input _ArrayType(filename="ArrayType.facts")
.input _InterfaceType(filename="InterfaceType.facts")
.input _ComponentType(filename="ComponentType.facts")
.input _ActualParam(filename="ActualParam.facts")
.input _BootstrapParam(filename="BootstrapParam.facts")
.input _DirectSuperinterface(filename="DirectSuperinterface.facts")
.input _DirectSuperclass(filename="DirectSuperclass.facts")
.input _Field_Modifier(filename="Field-Modifier.facts")
.input _ClassModifier(filename="ClassModifier.facts")
.input _FormalParam(filename="FormalParam.facts")
.input _Method_DeclaresException(filename="Method-DeclaresException.facts")
.input _Method_Modifier(filename="Method-Modifier.facts")
.input _NativeReturnVar(filename="NativeReturnVar.facts")
.input _Var_Type(filename="Var-Type.facts")
.input _Var_DeclaringMethod(filename="Var-DeclaringMethod.facts")
.input _Var_SimpleName(filename="Var-SimpleName.facts")
.input _ApplicationClass(filename="ApplicationClass.facts")
.input _ApplicationPackage(filename="ApplicationPackage.facts")
.input _ThisVar(filename="ThisVar.facts")
.input _ExceptionHandler_Previous(filename="ExceptionHandler-Previous.facts")
.input _AssignReturnValue(filename="AssignReturnValue.facts")
.input Properties
.input _OperatorAt(filename="OperatorAt.facts")
.input MainClass
.input _ClassArtifact(filename="Class-Artifact.facts")
.input _NormalHeap(filename="NormalHeap.facts")
.input _StringConstant(filename="StringConstant.facts")
.input _StringRaw(filename="StringRaw.facts")
.input _ClassHeap(filename="ClassHeap.facts")
.input _MethodHandleConstant(filename="MethodHandleConstant.facts")
.input _MethodTypeConstant(filename="MethodTypeConstant.facts")
.input _MethodTypeConstantParam(filename="MethodTypeConstantParam.facts")
.input _NativeLibEntryPoint(filename="NativeLibEntryPoint.facts")
.input _NativeMethodTypeCandidate(filename="NativeMethodTypeCandidate.facts")
.input _NativeNameCandidate(filename="NativeNameCandidate.facts")
.input _NativeMethodId(filename="NativeMethodId.facts")
.input _NativeXRef(filename="NativeXRef.facts")
.input _EmptyArray(filename="EmptyArray.facts")
.input _ArrayAllocation(filename="ArrayAllocation.facts")
.input AssignHeapAllocation(filename="AssignHeapAllocation.facts")
.input AssignLocal(filename="AssignLocal.facts")
.input AssignBinop(filename="AssignBinop.facts")
.input AssignUnop(filename="AssignUnop.facts")
.input _AssignOperFrom(filename="AssignOperFrom.facts")
.input _AssignOperFromConstant(filename="AssignOperFromConstant.facts")
.input _IfConstant(filename="IfConstant.facts")
.input _IfVar(filename="IfVar.facts")
.input _DummyIfVar(filename="DummyIfVar.facts")
.input AssignCast(filename="AssignCast.facts")
.input AssignCastNumConstant(filename="AssignCastNumConstant.facts")
.input AssignCastNull(filename="AssignCastNull.facts")
.input AssignNumConstant(filename="AssignNumConstant.facts")
.input _AssignNull(filename="AssignNull.facts")
.input AssignInstanceOf(filename="AssignInstanceOf.facts")
.input _Field(filename="Field.facts")
.input _EnterMonitor(filename="EnterMonitor.facts")
.input _ExitMonitor(filename="ExitMonitor.facts")
.input _MethodInvocation_Line(filename="MethodInvocation-Line.facts")
.input _StaticMethodInvocation(filename="StaticMethodInvocation.facts")
.input _SpecialMethodInvocation(filename="SpecialMethodInvocation.facts")
.input _VirtualMethodInvocation(filename="VirtualMethodInvocation.facts")
.input _SuperMethodInvocation(filename="SuperMethodInvocation.facts")
.input _DynamicMethodInvocation(filename="DynamicMethodInvocation.facts")
.input _DynamicMethodInvocation_DynParamType(filename="DynamicMethodInvocation-ParamType.facts")
.input _PolymorphicInvocation(filename="PolymorphicInvocation.facts")
.input _Throw(filename="Throw.facts")
.input _ThrowNull(filename="ThrowNull.facts")
.input _ExceptionHandler(filename="ExceptionHandler.facts")
.input ExceptionHandler_FormalParam(filename="ExceptionHandler-FormalParam.facts")
.input _Method(filename="Method.facts")
.input _StoreInstanceField(filename="StoreInstanceField.facts")
.input _LoadInstanceField(filename="LoadInstanceField.facts")
.input _StoreStaticField(filename="StoreStaticField.facts")
.input _LoadStaticField(filename="LoadStaticField.facts")
.input _StoreArrayIndex(filename="StoreArrayIndex.facts")
.input _LoadArrayIndex(filename="LoadArrayIndex.facts")
.input _ArrayInsnIndex(filename="ArrayInsnIndex.facts")
.input _ArrayNumIndex(filename="ArrayNumIndex.facts")
.input _Goto(filename="Goto.facts")
.input _If(filename="If.facts")
.input _TableSwitch(filename="TableSwitch.facts")
.input _LookupSwitch(filename="LookupSwitch.facts")
.input _TableSwitch_Target(filename="TableSwitch-Target.facts")
.input _LookupSwitch_Target(filename="LookupSwitch-Target.facts")
.input _TableSwitch_DefaultTarget(filename="TableSwitch-Default.facts")
.input _LookupSwitch_DefaultTarget(filename="LookupSwitch-Default.facts")
.input _Return(filename="Return.facts")
.input _ReturnVoid(filename="ReturnVoid.facts")
.input _AssignPhantomInvoke(filename="AssignPhantomInvoke.facts")
.input _BreakpointStmt(filename="BreakpointStmt.facts")
.input _UnsupportedInstruction(filename="UnsupportedInstruction.facts")
.input Type_Annotation(filename="Type-Annotation.facts")
.input Method_Annotation(filename="Method-Annotation.facts")
.input Field_Annotation(filename="Field-Annotation.facts")
.input Param_Annotation(filename="Param-Annotation.facts")
.input AnnotationElement(filename="AnnotationElement.facts")
.input PhantomType(filename="PhantomType.facts")
.input PhantomMethod(filename="PhantomMethod.facts")
.input PhantomBasedMethod(filename="PhantomBasedMethod.facts")
.input NumConstantRaw(filename="NumConstantRaw.facts")
.input XMLNode(filename="XMLNode.facts")
.input XMLNodeAttribute(filename="XMLNodeAttribute.facts")
.input XMLNodeData(filename="XMLNodeData.facts")