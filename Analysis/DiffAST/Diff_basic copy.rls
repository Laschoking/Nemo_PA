@source AST[integer, string,string,string, string, integer, string] : load-csv("TargetCSV.csv").

%ASTTypes(?type) :-
%    AST(?a,?type,?id, ?lit, ?fr, ?fr1).
@declare CFG(string, integer, string, string, integer, string).


% root of CFG is the first Block after a Variable Declaration
CFG("BlockList", ?nr3,?side, "MethodDecl",-1, ?side):-
    AST(?nr, ?side, "MethodDecl",_,_, _,_),
    AST(?nr1, ?side, _ , _, _, ?nr, ?side),
    AST(?nr2, ?side, "Block", _, _, ?nr1,?side),
    AST(?nr3, ?side, "List",_ , _, ?nr2,?side).

EndBB(?parType, ?parNr, ?side, ?condType, ?condNr, ?side):-
    CFG(?parType,?parNr, ?side,_ ,_,_ ),
    AST(?ifNr, ?side, "IfStmt", _, ?parNr, ?side),    
    AST(?condNr, ?side,?cond, _, ?ifNr, ?side).


CFG("IfStmt", ?nr, ?side, ?parType,?parNr, ?side):-
    CFG(?parType,?parNr, ?side,_ ,_,_ ),


@output CFG.
@output AST.